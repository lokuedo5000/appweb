<script type="text/javascript">
  function searchGet(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
      results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }
  var requisito = searchGet('requisito');
  var version = searchGet('version');
  var tipo = searchGet('tipo');
  var genero = searchGet('genero');

  var artfilter = articles;
  // FILTRO REQUISITOS
  if (requisito > 0) {
    var artfilter = articles.filter(filtrar => filtrar.requisitos == requiNum(requisito));

    $('title').text(mayuFirst(requiNum(requisito)) + ' | ')
  }

  // FILTRO VERSION
  if (version > 0) {
    var artfilter = artfilter.filter(filtrar => filtrar.version == versionNum(version));
    var gettitle = $('title').text();
    $('title').text(gettitle + mayuFirst(versionNum(version)) + ' | ')
  }

  // FILTRO TIPO
  if (tipo > 0) {
    var artfilter = artfilter.filter(filtrar => filtrar.tipo == tipoNum(tipo));
    var gettitle = $('title').text();
    $('title').text(gettitle + mayuFirst(tipoNum(tipo)) + ' | ')

    if (tipo == 1) {
      $('select[name=genero]').html(creaGenes());
    }else if (tipo == 2) {
      $('select[name=genero]').html(creaGenesPrograms());
    }
    $('select[name=genero]').val(genero);
  }

  // GENERO

  // FILTRO VERSION
  if (genero == 0) {

  }else{
    var gettitle = $('title').text();
    $('title').text(gettitle + mayuFirst(genero))

    var artfilter = search(genero);
  }

  // SET TITLE WEB
  var gettitle = $('title').text();
  $('title').text(gettitle + ' - ' + 'AppWeb')




  $('select[name=requisito]').val(requisito);
  $('select[name=version]').val(version);
  $('select[name=tipo]').val(tipo);
  // $('select[name=genero]').val(genero);



  // VER ARTICULOS
  var artfiltro = artfilter;
  // CLEAR ART
  var row_add = document.querySelector("#view_games");
  row_add.innerHTML = '';
  if (artfiltro.length == 0) {
    row_add.innerHTML = `<div class="title_inicio_all">
                          No Hay Resultados
                        </div>`;
  }
  // ADD ART
  for (var g = 0; g < artfiltro.length; g++) {
    row_add.innerHTML += `<div class="pdall app-col app-col-4">
                            <div class="contenedor_art">
                              <span class="avisoapp">${verifiqEstado(artfiltro[g].estado, artfiltro[g].version)}</span>
                              <div class="cover box-s" style="background-image: url(${artfiltro[g].img});">
                                <div class="artverorclickvideo">
                                  <a href="/download?v=${artfiltro[g].urls}&tp=${artfiltro[g].tipo}" class="cwI-eye3"></a>
                                  <a href="#play" class="cwI-play playvideoset" data-video="${artfiltro[g].video}"></a>
                                </div>
                                <div class="tituloart z-depth-3">
                                  ${textShort(artfiltro[g].name, 30)}
                                </div>
                              </div>
                            </div>
                          </div>`;
  }

  // SEARCH
  function search(keyword) {
    /*PARSE JSON*/
    var data = artfilter;
    // BUSCADOR ALL
    var search_fields = ['generos'] //key fields to search for in dataset
    if (keyword.length < 1) // skip if input is empty
      return

    var results = []

    for (var i in data) { // iterate through dataset
      for (var u = 0; u < search_fields.length; u++) { // iterate through each key in dataset

        var rel = getRelevance(data[i][search_fields[u]], keyword) // check if there are matches

        if (rel == 0) // no matches...
          continue // ...skip

        results.push({
          relevance: rel,
          entry: data[i]
        }) // matches found, add to results and store relevance
      }
    }

    results.sort(compareRelevance) // sort by relevance

    for (i = 0; i < results.length; i++) {
      results[i] = results[i].entry // remove relevance since it is no longer needed
    }

    return results
  }

  function getRelevance(value, keyword) {
    value = value.toLowerCase() // lowercase to make search not case sensitive
    keyword = keyword.toLowerCase()

    var index = value.indexOf(keyword) // index of the keyword
    var word_index = value.indexOf(' ' + keyword) // index of the keyword if it is not on the first index, but a word

    if (index == 0) // value starts with keyword (eg. for 'Dani California' -> searched 'Dan')
      return 3 // highest relevance
    else if (word_index != -1) // value doesnt start with keyword, but has the same word somewhere else (eg. 'Dani California' -> searched 'Cali')
      return 2 // medium relevance
    else if (index != -1) // value contains keyword somewhere (eg. 'Dani California' -> searched 'forn')
      return 1 // low relevance
    else
      return 0 // no matches, no relevance
  }

  function compareRelevance(a, b) {
    return b.relevance - a.relevance
  }

  function requiNum(num) {
    if (num == 1) {
      return 'altos';
    }else if (num == 2) {
      return 'medios';
    }else if (num == 3) {
      return 'bajos';
    }
  }

  function versionNum(num) {
    if (num == 1) {
      return 'Portable';
    }else if (num == 2) {
      return 'Instalable';
    }
  }

  function tipoNum(num) {
    if (num == 1) {
      return 'games';
    }else if (num == 2) {
      return 'programs';
    }
  }


  <%-script%>
</script>
